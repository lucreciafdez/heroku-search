import PropTypes from "prop-types";
import React from "react";
import LayoutSidebar from "./LayoutSidebar";
import { appendClassName } from "../view-helpers";

function Layout(_ref) {
  var className = _ref.className,
      children = _ref.children,
      header = _ref.header,
      bodyContent = _ref.bodyContent,
      bodyFooter = _ref.bodyFooter,
      bodyHeader = _ref.bodyHeader,
      sideContent = _ref.sideContent;
  return React.createElement("div", {
    className: appendClassName("sui-layout", className)
  }, React.createElement("div", {
    className: "sui-layout-header"
  }, React.createElement("div", {
    className: "sui-layout-header__inner"
  }, header)), React.createElement("div", {
    className: "sui-layout-body"
  }, React.createElement("div", {
    className: "sui-layout-body__inner"
  }, React.createElement(LayoutSidebar, {
    className: "sui-layout-sidebar"
  }, sideContent), React.createElement("div", {
    className: "sui-layout-main"
  }, React.createElement("div", {
    className: "sui-layout-main-header"
  }, React.createElement("div", {
    className: "sui-layout-main-header__inner"
  }, bodyHeader)), React.createElement("div", {
    className: "sui-layout-main-body"
  }, children || bodyContent), React.createElement("div", {
    className: "sui-layout-main-footer"
  }, bodyFooter)))));
}

Layout.propTypes = {
  className: PropTypes.string,
  children: PropTypes.node,
  header: PropTypes.node,
  bodyContent: PropTypes.node,
  bodyFooter: PropTypes.node,
  bodyHeader: PropTypes.node,
  sideContent: PropTypes.node
};
export default Layout;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9sYXlvdXRzL0xheW91dC5qcyJdLCJuYW1lcyI6WyJQcm9wVHlwZXMiLCJSZWFjdCIsIkxheW91dFNpZGViYXIiLCJhcHBlbmRDbGFzc05hbWUiLCJMYXlvdXQiLCJjbGFzc05hbWUiLCJjaGlsZHJlbiIsImhlYWRlciIsImJvZHlDb250ZW50IiwiYm9keUZvb3RlciIsImJvZHlIZWFkZXIiLCJzaWRlQ29udGVudCIsInByb3BUeXBlcyIsInN0cmluZyIsIm5vZGUiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLFNBQVAsTUFBc0IsWUFBdEI7QUFDQSxPQUFPQyxLQUFQLE1BQWtCLE9BQWxCO0FBRUEsT0FBT0MsYUFBUCxNQUEwQixpQkFBMUI7QUFDQSxTQUFTQyxlQUFULFFBQWdDLGlCQUFoQzs7QUFFQSxTQUFTQyxNQUFULE9BUUc7QUFBQSxNQVBEQyxTQU9DLFFBUERBLFNBT0M7QUFBQSxNQU5EQyxRQU1DLFFBTkRBLFFBTUM7QUFBQSxNQUxEQyxNQUtDLFFBTERBLE1BS0M7QUFBQSxNQUpEQyxXQUlDLFFBSkRBLFdBSUM7QUFBQSxNQUhEQyxVQUdDLFFBSERBLFVBR0M7QUFBQSxNQUZEQyxVQUVDLFFBRkRBLFVBRUM7QUFBQSxNQUREQyxXQUNDLFFBRERBLFdBQ0M7QUFDRCxTQUNFO0FBQUssSUFBQSxTQUFTLEVBQUVSLGVBQWUsQ0FBQyxZQUFELEVBQWVFLFNBQWY7QUFBL0IsS0FDRTtBQUFLLElBQUEsU0FBUyxFQUFDO0FBQWYsS0FDRTtBQUFLLElBQUEsU0FBUyxFQUFDO0FBQWYsS0FBMkNFLE1BQTNDLENBREYsQ0FERixFQUlFO0FBQUssSUFBQSxTQUFTLEVBQUM7QUFBZixLQUNFO0FBQUssSUFBQSxTQUFTLEVBQUM7QUFBZixLQUNFLG9CQUFDLGFBQUQ7QUFBZSxJQUFBLFNBQVMsRUFBQztBQUF6QixLQUNHSSxXQURILENBREYsRUFJRTtBQUFLLElBQUEsU0FBUyxFQUFDO0FBQWYsS0FDRTtBQUFLLElBQUEsU0FBUyxFQUFDO0FBQWYsS0FDRTtBQUFLLElBQUEsU0FBUyxFQUFDO0FBQWYsS0FBZ0RELFVBQWhELENBREYsQ0FERixFQUlFO0FBQUssSUFBQSxTQUFTLEVBQUM7QUFBZixLQUNHSixRQUFRLElBQUlFLFdBRGYsQ0FKRixFQU9FO0FBQUssSUFBQSxTQUFTLEVBQUM7QUFBZixLQUF5Q0MsVUFBekMsQ0FQRixDQUpGLENBREYsQ0FKRixDQURGO0FBdUJEOztBQUVETCxNQUFNLENBQUNRLFNBQVAsR0FBbUI7QUFDakJQLEVBQUFBLFNBQVMsRUFBRUwsU0FBUyxDQUFDYSxNQURKO0FBRWpCUCxFQUFBQSxRQUFRLEVBQUVOLFNBQVMsQ0FBQ2MsSUFGSDtBQUdqQlAsRUFBQUEsTUFBTSxFQUFFUCxTQUFTLENBQUNjLElBSEQ7QUFJakJOLEVBQUFBLFdBQVcsRUFBRVIsU0FBUyxDQUFDYyxJQUpOO0FBS2pCTCxFQUFBQSxVQUFVLEVBQUVULFNBQVMsQ0FBQ2MsSUFMTDtBQU1qQkosRUFBQUEsVUFBVSxFQUFFVixTQUFTLENBQUNjLElBTkw7QUFPakJILEVBQUFBLFdBQVcsRUFBRVgsU0FBUyxDQUFDYztBQVBOLENBQW5CO0FBVUEsZUFBZVYsTUFBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IExheW91dFNpZGViYXIgZnJvbSBcIi4vTGF5b3V0U2lkZWJhclwiO1xuaW1wb3J0IHsgYXBwZW5kQ2xhc3NOYW1lIH0gZnJvbSBcIi4uL3ZpZXctaGVscGVyc1wiO1xuXG5mdW5jdGlvbiBMYXlvdXQoe1xuICBjbGFzc05hbWUsXG4gIGNoaWxkcmVuLFxuICBoZWFkZXIsXG4gIGJvZHlDb250ZW50LFxuICBib2R5Rm9vdGVyLFxuICBib2R5SGVhZGVyLFxuICBzaWRlQ29udGVudFxufSkge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXthcHBlbmRDbGFzc05hbWUoXCJzdWktbGF5b3V0XCIsIGNsYXNzTmFtZSl9PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdWktbGF5b3V0LWhlYWRlclwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN1aS1sYXlvdXQtaGVhZGVyX19pbm5lclwiPntoZWFkZXJ9PC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3VpLWxheW91dC1ib2R5XCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3VpLWxheW91dC1ib2R5X19pbm5lclwiPlxuICAgICAgICAgIDxMYXlvdXRTaWRlYmFyIGNsYXNzTmFtZT1cInN1aS1sYXlvdXQtc2lkZWJhclwiPlxuICAgICAgICAgICAge3NpZGVDb250ZW50fVxuICAgICAgICAgIDwvTGF5b3V0U2lkZWJhcj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN1aS1sYXlvdXQtbWFpblwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdWktbGF5b3V0LW1haW4taGVhZGVyXCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3VpLWxheW91dC1tYWluLWhlYWRlcl9faW5uZXJcIj57Ym9keUhlYWRlcn08L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdWktbGF5b3V0LW1haW4tYm9keVwiPlxuICAgICAgICAgICAgICB7Y2hpbGRyZW4gfHwgYm9keUNvbnRlbnR9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3VpLWxheW91dC1tYWluLWZvb3RlclwiPntib2R5Rm9vdGVyfTwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5MYXlvdXQucHJvcFR5cGVzID0ge1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgaGVhZGVyOiBQcm9wVHlwZXMubm9kZSxcbiAgYm9keUNvbnRlbnQ6IFByb3BUeXBlcy5ub2RlLFxuICBib2R5Rm9vdGVyOiBQcm9wVHlwZXMubm9kZSxcbiAgYm9keUhlYWRlcjogUHJvcFR5cGVzLm5vZGUsXG4gIHNpZGVDb250ZW50OiBQcm9wVHlwZXMubm9kZVxufTtcblxuZXhwb3J0IGRlZmF1bHQgTGF5b3V0O1xuIl19